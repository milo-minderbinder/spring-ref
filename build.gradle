apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'

sourceCompatibility = 1.8

ext {
    // Application container
    javaxServletVersion = "3.0.1"

    //Configuration
    jasyptVersion = "1.9.2"
    jasyptSpring31Version = "1.9.2"

    // MVC
    springVersion = "4.3.10.RELEASE"

    // Database
    postgresVersion = "9.4-1201-jdbc41"
    h2Version = "1.4.185"
    springDataJpaVersion = "1.11.6.RELEASE"
    hibernateJpaApiVersion = "1.0.0.Final"
    hibernateCoreVersion = "5.2.10.Final"
    cglibVersion = "3.1"

    // Security
    springSecurityVersion = "4.2.3.RELEASE"
    insecurityPolicyVersion = "1.0.0"

    // Template engine
    thymeleafSpringVersion = "3.0.7.RELEASE"
    thymeleafSpringSecurityVersion = "3.0.2.RELEASE"

    // Validation
    javaxValidationApiVersion = "1.1.0.Final"
    hibernateValidatorVersion = "5.1.3.Final"

    // Logging
    slf4jVersion = "1.7.10"

    // Testing
    junitVersion = "4.12"
    mockitoVersion = "1.10.19"
    hamcrestVersion = "1.3"
}

buildscript {
    def propdepsPluginVersion = "0.0.7"

    repositories {
        maven {
            url 'http://repo.spring.io/plugins-release'
        }
    }

    dependencies {
        classpath "org.springframework.build.gradle:propdeps-plugin:$propdepsPluginVersion"
    }
}

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
    maven { url 'https://raw.githubusercontent.com/Baqend/Orestes-Bloomfilter/master/maven-repo' }
}

dependencies {
    // Application container
    providedCompile "javax.servlet:javax.servlet-api:$javaxServletVersion"
    //compile "javax.servlet:javax.servlet-api:$javaxServletVersion"

    // Configuration
    compile "org.jasypt:jasypt:$jasyptVersion"
    compile "org.jasypt:jasypt-spring31:$jasyptSpring31Version"

    // MVC
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"

    // Database
    compile "org.springframework.data:spring-data-jpa:$springDataJpaVersion"
    compile "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:$hibernateJpaApiVersion"
    compile "org.hibernate:hibernate-core:$hibernateCoreVersion"
    ['spring-orm', 'spring-aop', 'spring-beans', 'spring-tx', 'spring-expression', 'spring-context'].each {
        compile "org.springframework:$it:$springVersion"
    }
    compile "org.postgresql:postgresql:$postgresVersion"

    // Security
    compile "org.springframework.security:spring-security-web:$springSecurityVersion"
    compile "org.springframework.security:spring-security-core:$springSecurityVersion"
    compile "org.springframework.security:spring-security-config:$springSecurityVersion"
    compile "co.insecurity:policy:$insecurityPolicyVersion"

    // Template engine
    compile "org.thymeleaf:thymeleaf-spring4:$thymeleafSpringVersion"
    compile "org.thymeleaf.extras:thymeleaf-extras-springsecurity4:$thymeleafSpringSecurityVersion"

    // Validation
    compile "javax.validation:validation-api:$javaxValidationApiVersion"
    compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"

    // Logging
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    runtime "org.slf4j:slf4j-log4j12:$slf4jVersion"

    // Test env
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile "junit:junit:$junitVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"
}

test {
    testLogging {
        // Show that tests are run in the command-line output
        events 'started', 'passed'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}
